// Date: 2015/01/15 0:48:56
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package tsuteto.spelunker.entity.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import org.lwjgl.opengl.GL11;
import tsuteto.spelunker.entity.EntityGhost;

public class ModelGhost extends ModelBase
{
    ModelRenderer head1;
    ModelRenderer head2;
    ModelRenderer leftEar;
    ModelRenderer lightEar;
    ModelRenderer body1;
    ModelRenderer body2;
    ModelRenderer body3;
    ModelRenderer body4;
    ModelRenderer body5;
    ModelRenderer leftHand;
    ModelRenderer rightHand;

    public ModelGhost()
    {
        textureWidth = 64;
        textureHeight = 64;

        head1 = new ModelRenderer(this, 0, 0);
        head1.addBox(0F, 0F, 0F, 9, 8, 9);
        head1.setRotationPoint(-6F, 1F, -6F);
        head1.setTextureSize(64, 64);
        head1.mirror = true;
        setRotation(head1, 0F, 0F, 0F);
        head2 = new ModelRenderer(this, 0, 17);
        head2.addBox(0F, 0F, 0F, 7, 1, 7);
        head2.setRotationPoint(-5F, 0F, -5F);
        head2.setTextureSize(64, 64);
        head2.mirror = true;
        setRotation(head2, 0F, 0F, 0F);
        leftEar = new ModelRenderer(this, 38, 17);
        leftEar.addBox(0F, 0F, 0F, 2, 1, 3);
        leftEar.setRotationPoint(-1F, -1F, -4F);
        leftEar.setTextureSize(64, 64);
        leftEar.mirror = true;
        setRotation(leftEar, 0F, 0F, 0F);
        lightEar = new ModelRenderer(this, 28, 17);
        lightEar.addBox(0F, 0F, 0F, 2, 1, 3);
        lightEar.setRotationPoint(-4F, -1F, -4F);
        lightEar.setTextureSize(64, 64);
        lightEar.mirror = true;
        setRotation(lightEar, 0F, 0F, 0F);
        body1 = new ModelRenderer(this, 0, 29);
        body1.addBox(0F, 0F, 0F, 7, 2, 7);
        body1.setRotationPoint(-5F, 9F, -5F);
        body1.setTextureSize(64, 64);
        body1.mirror = true;
        setRotation(body1, 0F, 0F, 0F);
        body2 = new ModelRenderer(this, 0, 38);
        body2.addBox(0F, 0F, 0F, 5, 1, 5);
        body2.setRotationPoint(-4F, 11F, -4F);
        body2.setTextureSize(64, 64);
        body2.mirror = true;
        setRotation(body2, 0F, 0F, 0F);
        body3 = new ModelRenderer(this, 0, 44);
        body3.addBox(0F, 0F, 0F, 4, 1, 4);
        body3.setRotationPoint(-3F, 12F, -3.466667F);
        body3.setTextureSize(64, 64);
        body3.mirror = true;
        setRotation(body3, 0F, 0F, 0F);
        body4 = new ModelRenderer(this, 0, 49);
        body4.addBox(0F, 0F, 0F, 2, 1, 2);
        body4.setRotationPoint(-2F, 13F, -2F);
        body4.setTextureSize(64, 64);
        body4.mirror = true;
        setRotation(body4, 0F, 0F, 0F);
        body5 = new ModelRenderer(this, 0, 52);
        body5.addBox(0F, 0F, 0F, 2, 1, 2);
        body5.setRotationPoint(-3F, 14F, -2F);
        body5.setTextureSize(64, 64);
        body5.mirror = true;
        setRotation(body5, 0F, 0F, 0F);
        leftHand = new ModelRenderer(this, 14, 25);
        leftHand.addBox(0F, -1F, -1F, 5, 2, 2);
        leftHand.setRotationPoint(3F, 5F, -3F);
        leftHand.setTextureSize(64, 64);
        leftHand.mirror = true;
        setRotation(leftHand, 0F, 0F, 0.8726646F);
        rightHand = new ModelRenderer(this, 0, 25);
        rightHand.addBox(0F, -1F, -1F, 5, 2, 2);
        rightHand.setRotationPoint(-6F, 5F, -3F);
        rightHand.setTextureSize(64, 64);
        rightHand.mirror = true;
        setRotation(rightHand, 0F, 0F, 2.268928F);
    }

    public void render(EntityGhost entity, float f, float f1, float f2, float f3, float f4, float f5)
    {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);

        GL11.glPushMatrix();
        GL11.glScalef(2.0F * entity.getType().scale, 2.0F * entity.getType().scale, 2.0F * entity.getType().scale);
        GL11.glTranslatef(0.0F, -0.5F * entity.getType().scale, 0.0F);
        head1.render(f5);
        head2.render(f5);
        leftEar.render(f5);
        lightEar.render(f5);
        body1.render(f5);
        body2.render(f5);
        body3.render(f5);
        body4.render(f5);
        body5.render(f5);
        leftHand.render(f5);
        rightHand.render(f5);
        GL11.glPopMatrix();
    }

    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
    {
        this.render((EntityGhost) entity, f, f1, f2, f3, f4, f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z)
    {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    @Override
    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
    {
        super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    }

}
