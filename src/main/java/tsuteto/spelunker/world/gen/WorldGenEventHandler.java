package tsuteto.spelunker.world.gen;


import cpw.mods.fml.common.eventhandler.SubscribeEvent;
import net.minecraft.block.Block;
import net.minecraft.world.World;
import net.minecraftforge.event.terraingen.PopulateChunkEvent;
import tsuteto.spelunker.SpelunkerMod;
import tsuteto.spelunker.init.SpelunkerBlocks;
import tsuteto.spelunker.util.ModLog;

import java.util.Random;

public class WorldGenEventHandler
{
    @SubscribeEvent
    public void decorateBiome(PopulateChunkEvent.Post event)
    {
        World world = event.world;

        if (event.world.getWorldInfo().getVanillaDimension() == 0
                && SpelunkerMod.getWorldInfo() != null && !SpelunkerMod.isWorldInitialized())
        {
            for (int i = 0; i < 32; ++i)
            {
                int j = world.getWorldInfo().getSpawnX() + world.rand.nextInt(20) - world.rand.nextInt(20);
                int k = world.getWorldInfo().getSpawnZ() + world.rand.nextInt(20) - world.rand.nextInt(20);
                int l = world.getTopSolidOrLiquidBlock(j, k) + 1;

                if (this.generate(world, world.rand, j, l, k))
                {
                    SpelunkerMod.setWorldInitialized();
                    ModLog.debug("Spelunker portal generated by %s", Thread.currentThread().getName());
                    break;
                }
            }
        }
    }

    public boolean generate(World p_76484_1_, Random p_76484_2_, int p_76484_3_, int p_76484_4_, int p_76484_5_)
    {
        Block block;

        do
        {
            block = p_76484_1_.getBlock(p_76484_3_, p_76484_4_, p_76484_5_);
            if (!block.isAir(p_76484_1_, p_76484_3_, p_76484_4_, p_76484_5_) && !block.isLeaves(p_76484_1_, p_76484_3_, p_76484_4_, p_76484_5_)) break;
            p_76484_4_--;
        } while (p_76484_4_ > 1);

        if (p_76484_4_ < 1)
        {
            return false;
        }
        else
        {
            ++p_76484_4_;

            for (int l = 0; l < 4; ++l)
            {
                int i1 = p_76484_3_ + p_76484_2_.nextInt(4) - p_76484_2_.nextInt(4);
                int j1 = p_76484_4_ + p_76484_2_.nextInt(3) - p_76484_2_.nextInt(3);
                int k1 = p_76484_5_ + p_76484_2_.nextInt(4) - p_76484_2_.nextInt(4);

                if (p_76484_1_.isAirBlock(i1, j1, k1) && World.doesBlockHaveSolidTopSurface(p_76484_1_, i1, j1 - 1, k1))
                {
                    p_76484_1_.setBlock(i1, j1, k1, SpelunkerBlocks.blockSpelunkerPortal2, 0, 2);
                    p_76484_1_.setBlock(i1, j1 + 1, k1, SpelunkerBlocks.blockSpelunkerPortal2, 8, 2);

                    return true;
                }
            }

            return false;
        }
    }
}